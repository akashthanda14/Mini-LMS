openapi: 3.0.0
info:
  title: LMS Authentication API - User Authentication
  version: 1.0.0

paths:
  /api/user-auth/register:
    post:
      tags:
        - Authentication
      summary: Register new user
      description: Register a new user with email or phone number. Sends OTP for verification.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User email address (use email OR phone, not both)
                  example: user@example.com
                phoneNumber:
                  type: string
                  description: User phone number with country code (use email OR phone, not both)
                  example: "+1234567890"
              oneOf:
                - required: [email]
                - required: [phoneNumber]
            examples:
              emailRegistration:
                summary: Register with email
                value:
                  email: user@example.com
              phoneRegistration:
                summary: Register with phone
                value:
                  phoneNumber: "+1234567890"
      responses:
        '200':
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OTP sent to your email
                  userId:
                    type: string
                    format: uuid
                    example: "123e4567-e89b-12d3-a456-426614174000"
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: User already exists

  /api/user-auth/verify-email-otp:
    post:
      tags:
        - Authentication
      summary: Verify email OTP
      description: Verify the OTP sent to user's email during registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                otp:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Email verified successfully
                  userId:
                    type: string
                    format: uuid
        '400':
          description: Invalid or expired OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/user-auth/verify-phone-otp:
    post:
      tags:
        - Authentication
      summary: Verify phone OTP
      description: Verify the OTP sent to user's phone during registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phoneNumber
                - otp
              properties:
                phoneNumber:
                  type: string
                  example: "+1234567890"
                otp:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: Phone verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Phone number verified successfully
                  userId:
                    type: string
                    format: uuid
        '400':
          description: Invalid or expired OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/user-auth/complete-profile:
    post:
      tags:
        - Authentication
      summary: Complete user profile
      description: Complete user profile after OTP verification (set name and password)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - name
                - password
              properties:
                userId:
                  type: string
                  format: uuid
                  example: "123e4567-e89b-12d3-a456-426614174000"
                name:
                  type: string
                  example: John Doe
                password:
                  type: string
                  format: password
                  minLength: 8
                  example: SecurePassword123!
      responses:
        '200':
          description: Profile completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Profile completed successfully
                  token:
                    type: string
                    description: JWT authentication token
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/user-auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Login with email/phone and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - emailOrPhone
                - password
              properties:
                emailOrPhone:
                  type: string
                  description: User email or phone number
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: SecurePassword123!
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Login successful
                  token:
                    type: string
                    description: JWT authentication token
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Invalid credentials

  /api/user-auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Request password reset
      description: Request OTP for password reset via email or phone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                phoneNumber:
                  type: string
                  example: "+1234567890"
              oneOf:
                - required: [email]
                - required: [phoneNumber]
      responses:
        '200':
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OTP sent to your email
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/user-auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset password
      description: Reset password using OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - otp
                - newPassword
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                phoneNumber:
                  type: string
                  example: "+1234567890"
                otp:
                  type: string
                  example: "123456"
                newPassword:
                  type: string
                  format: password
                  minLength: 8
                  example: NewSecurePassword123!
              oneOf:
                - required: [email, otp, newPassword]
                - required: [phoneNumber, otp, newPassword]
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Password reset successful
                  token:
                    type: string
                    description: JWT authentication token
        '400':
          description: Invalid or expired OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
